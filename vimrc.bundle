"==================================================
" Bundles

" Turn off filetype plugins before bundles init
filetype off

" Setting up Vundle if not installed
let iCanHazVundle=1
let vundle_readme=expand('~/.vim/bundle/vundle/README.md')
if !filereadable(vundle_readme)
    echo 'Installing Vundle..'
    echo ''
    silent !mkdir -p ~/.vim/bundle
    silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
    let iCanHazVundle=0
endif
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Add vundle to update it like any other bundle
Bundle 'gmarik/vundle'
" Some support functions used by delimitmate, and snipmate
Bundle 'vim-scripts/tlib'

" Great file system explorer, it appears when you open dir in vim
" Allow modification of dir, and may other things
" Must have
Bundle 'scrooloose/nerdtree'

" Add code static check on write
" need to be properly configured.
" I just enable it, with default config,
" many false positive but still usefull
Bundle 'scrooloose/syntastic'

" Install jshint and csslint for syntastic
" Path to jshint if it not installed globally, then use local installation
if !executable("jshint")
    let g:syntastic_javascript_jshint_exec = '~/.vim/node_modules/.bin/jshint'
    "let g:syntastic_javascript_jshint_exec = '~/.vim/node_modules/.bin/jshint'
    if !executable(expand(g:syntastic_javascript_jshint_exec))
        silent ! echo 'Installing jshint' && npm --prefix ~/.vim/ install jshint
    endif
endif
" Path to csslint if it not installed globally, then use local installation
if !executable("csslint")
    let g:syntastic_css_csslint_exec='~/.vim/node_modules/.bin/csslint'
    if !executable(expand(g:syntastic_css_csslint_exec))
        silent ! echo 'Installing csslint' && npm --prefix ~/.vim/ install csslint
    endif
endif

" Fuzzy file, buffer, mru, tag, etc finder.
Bundle 'kien/ctrlp.vim'

" surround.vim: quoting/parenthesizing made simple
Bundle 'tpope/vim-surround'

" Vim motions on speed!
Bundle 'Lokaltog/vim-easymotion'

" Add snippets functionality for vim
Bundle 'garbas/vim-snipmate'
" Dependency for snipmate
Bundle 'MarcWeber/vim-addon-mw-utils'

" Default snippets. for snipmate
Bundle 'honza/vim-snippets'

" Add smart commands for comments like:
" gcc - Toggle comment for the current line
" gc  - Toggle comments for selected region or number of strings
" Very usefull
Bundle 'tomtom/tcomment_vim'

" Nice statusline/ruler for vim
Bundle 'bling/vim-airline'

" Allow autoclose paired characters like [,] or (,),
" and add smart cursor positioning inside it,
Bundle 'Raimondi/delimitMate'

" Less syntax
Bundle 'groenewege/vim-less'

" vim jade syntax highlight
Bundle 'digitaltoad/vim-jade'

" Fix-up dot command behavior
" it's kind of service plugin
Bundle 'tpope/vim-repeat'

" Smart indent for javascript
" http://www.vim.org/scripts/script.php?script_id=3081
Bundle 'lukaszb/vim-web-indent'

" True Sublime Text style multiple selections for Vim
Bundle 'terryma/vim-multiple-cursors'

" Unite and create user interfaces
" http://www.vim.org/scripts/script.php?script_id=3396
Bundle 'Shougo/unite.vim'

Bundle 'Shougo/neocomplcache.vim'
let g:neocomplcache_enable_at_startup = 1

" Bundle 'ervandew/supertab'
Bundle 'mattn/emmet-vim'

" Installing bundles for the first time
if iCanHazVundle == 0
    echo 'Installing Bundles, please ignore key map error messages'
    echo ''
    :BundleInstall
endif



